/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
)

// VolumeApplyConfiguration represents a declarative configuration of the Volume type for use
// with apply.
type VolumeApplyConfiguration struct {
	VolumeMount            *corev1.VolumeMount            `json:"volumeMount,omitempty"`
	PersistentVolumeSource *corev1.PersistentVolumeSource `json:"persistentVolumeSource,omitempty"`
	Size                   *int64                         `json:"size,omitempty"`
}

// VolumeApplyConfiguration constructs a declarative configuration of the Volume type for use with
// apply.
func Volume() *VolumeApplyConfiguration {
	return &VolumeApplyConfiguration{}
}

// WithVolumeMount sets the VolumeMount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VolumeMount field is set to the value of the last call.
func (b *VolumeApplyConfiguration) WithVolumeMount(value corev1.VolumeMount) *VolumeApplyConfiguration {
	b.VolumeMount = &value
	return b
}

// WithPersistentVolumeSource sets the PersistentVolumeSource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PersistentVolumeSource field is set to the value of the last call.
func (b *VolumeApplyConfiguration) WithPersistentVolumeSource(value corev1.PersistentVolumeSource) *VolumeApplyConfiguration {
	b.PersistentVolumeSource = &value
	return b
}

// WithSize sets the Size field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Size field is set to the value of the last call.
func (b *VolumeApplyConfiguration) WithSize(value int64) *VolumeApplyConfiguration {
	b.Size = &value
	return b
}
