/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	termv1 "cluster/api/term/v1"

	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// CloudTermLister helps list CloudTerms.
// All objects returned here must be treated as read-only.
type CloudTermLister interface {
	// List lists all CloudTerms in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*termv1.CloudTerm, err error)
	// CloudTerms returns an object that can list and get CloudTerms.
	CloudTerms(namespace string) CloudTermNamespaceLister
	CloudTermListerExpansion
}

// cloudTermLister implements the CloudTermLister interface.
type cloudTermLister struct {
	listers.ResourceIndexer[*termv1.CloudTerm]
}

// NewCloudTermLister returns a new CloudTermLister.
func NewCloudTermLister(indexer cache.Indexer) CloudTermLister {
	return &cloudTermLister{listers.New[*termv1.CloudTerm](indexer, termv1.Resource("cloudterm"))}
}

// CloudTerms returns an object that can list and get CloudTerms.
func (s *cloudTermLister) CloudTerms(namespace string) CloudTermNamespaceLister {
	return cloudTermNamespaceLister{listers.NewNamespaced[*termv1.CloudTerm](s.ResourceIndexer, namespace)}
}

// CloudTermNamespaceLister helps list and get CloudTerms.
// All objects returned here must be treated as read-only.
type CloudTermNamespaceLister interface {
	// List lists all CloudTerms in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*termv1.CloudTerm, err error)
	// Get retrieves the CloudTerm from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*termv1.CloudTerm, error)
	CloudTermNamespaceListerExpansion
}

// cloudTermNamespaceLister implements the CloudTermNamespaceLister
// interface.
type cloudTermNamespaceLister struct {
	listers.ResourceIndexer[*termv1.CloudTerm]
}
